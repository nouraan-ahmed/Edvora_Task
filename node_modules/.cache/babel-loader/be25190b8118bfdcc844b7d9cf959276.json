{"ast":null,"code":"var _jsxFileName = \"/home/nouran/Documents/Projects/React/edvora_task/src/components/Ride/ride.jsx\";\nimport React from 'react';\nimport { Container } from 'react-bootstrap';\nimport map from '../../assets/images/map.jpg';\nimport classes from './ride.module.css';\nimport { Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Ride = props => {\n  const closest = (ride, station_code) => {\n    const st = ride.station_path.reduce(function (prev, curr) {\n      return Math.abs(curr - station_code) < Math.abs(prev - station_code) ? curr : prev;\n    });\n    const Obj = { ...ride,\n      distanceFromStation: st - station_code\n    };\n    Object.entries(Obj).sort(function (a, b) {\n      console.log(a.distance);\n      return a - b;\n    });\n    console.log(Obj);\n    return st; //st.sort()\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"text-white p-2\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: classes.Ride,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xl: 4,\n        lg: 6,\n        className: \"p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.Rideimg,\n          src: map,\n          alt: \"map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xl: 8,\n        lg: 6,\n        className: \"p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.Line,\n              children: \"Ride Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), \": \", props.ride.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.Line,\n              children: \"Origin Station\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), \": \", props.ride.origin_station_code]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.Line,\n              children: \"station_path\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), \": \", JSON.stringify(props.ride.station_path)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.Line,\n              children: [new Date().getDate(), \"th Feb 2022\", \" \", \" \", `${new Date().getHours()}:${new Date().getMinutes()}`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.Line,\n              children: \"Distance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), \": \", closest(props.ride, props.station_code) - props.station_code]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_c = Ride;\nexport default Ride;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ride\");","map":{"version":3,"sources":["/home/nouran/Documents/Projects/React/edvora_task/src/components/Ride/ride.jsx"],"names":["React","Container","map","classes","Col","Row","Ride","props","closest","ride","station_code","st","station_path","reduce","prev","curr","Math","abs","Obj","distanceFromStation","Object","entries","sort","a","b","console","log","distance","Rideimg","Line","id","origin_station_code","JSON","stringify","Date","getDate","getHours","getMinutes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgB,6BAAhB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB;;AAEA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAE3B,QAAMC,OAAO,GAAG,CAACC,IAAD,EAAOC,YAAP,KAAwB;AAEpC,UAAMC,EAAE,GAAGF,IAAI,CACVG,YADM,CAENC,MAFM,CAEC,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAC1B,aAAOC,IAAI,CAACC,GAAL,CAASF,IAAI,GAAGL,YAAhB,IAAgCM,IAAI,CAACC,GAAL,CAASH,IAAI,GAAGJ,YAAhB,CAAhC,GACDK,IADC,GAEDD,IAFN;AAGH,KANM,CAAX;AAOA,UAAMI,GAAG,GAAG,EACR,GAAGT,IADK;AAERU,MAAAA,mBAAmB,EAAER,EAAE,GAAGD;AAFlB,KAAZ;AAIAU,IAAAA,MAAM,CAACC,OAAP,CAAeH,GAAf,EAAoBI,IAApB,CAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACI,QAAd;AACA,aAAOJ,CAAC,GAAGC,CAAX;AACH,KAHD;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,GAAZ;AACA,WAAOP,EAAP,CAlBoC,CAmBpC;AAEH,GArBD;;AAuBA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,gBAA3B;AAAA,2BACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAER,OAAO,CAACG,IAAxB;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,SAAS,EAAC,KAA7B;AAAA,+BACI;AAAK,UAAA,SAAS,EAAEH,OAAO,CAACyB,OAAxB;AAAiC,UAAA,GAAG,EAAE1B,GAAtC;AAA2C,UAAA,GAAG,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,SAAS,EAAC,KAA7B;AAAA,+BACI;AAAA,kCACI;AAAA,oCACI;AAAM,cAAA,SAAS,EAAEC,OAAO,CAAC0B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,QAEctB,KAAK,CAACE,IAAN,CAAWqB,EAFzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAA,oCACI;AAAM,cAAA,SAAS,EAAE3B,OAAO,CAAC0B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,QAEctB,KAAK,CAACE,IAAN,CAAWsB,mBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI;AAAA,oCACI;AAAM,cAAA,SAAS,EAAE5B,OAAO,CAAC0B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,QAEcG,IAAI,CAACC,SAAL,CAAe1B,KAAK,CAACE,IAAN,CAAWG,YAA1B,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAaI;AAAA,mCACI;AAAM,cAAA,SAAS,EAAET,OAAO,CAAC0B,IAAzB;AAAA,yBACK,IAAIK,IAAJ,GAAWC,OAAX,EADL,iBACsC,GADtC,OAC6C,GAAE,IAAID,IAAJ,GAAWE,QAAX,EAAsB,IAAG,IAAIF,IAAJ,GAAWG,UAAX,EAAwB,EADhG;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAbJ,eAmBI;AAAA,oCACI;AAAM,cAAA,SAAS,EAAElC,OAAO,CAAC0B,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,QAEcrB,OAAO,CAACD,KAAK,CAACE,IAAP,EAAaF,KAAK,CAACG,YAAnB,CAAP,GAA0CH,KAAK,CAACG,YAF9D;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CA5DM;KAAMJ,I;AA8Db,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport {Container} from 'react-bootstrap';\nimport map from '../../assets/images/map.jpg'\nimport classes from './ride.module.css'\nimport {Col, Row} from 'react-bootstrap';\n\nexport const Ride = (props) => {\n\n    const closest = (ride, station_code) => {\n\n        const st = ride\n            .station_path\n            .reduce(function (prev, curr) {\n                return Math.abs(curr - station_code) < Math.abs(prev - station_code)\n                    ? curr\n                    : prev;\n            });\n        const Obj = {\n            ...ride,\n            distanceFromStation: st - station_code\n        }\n        Object.entries(Obj).sort(function (a, b) {\n            console.log(a.distance)\n            return a - b;\n        });\n        console.log(Obj);\n        return st;\n        //st.sort()\n\n    };\n\n    return (\n        <Container fluid className=\"text-white p-2\">\n            <Row className={classes.Ride}>\n                <Col xl={4} lg={6} className=\"p-3\">\n                    <img className={classes.Rideimg} src={map} alt=\"map\"/>\n                </Col>\n                <Col xl={8} lg={6} className=\"p-3\">\n                    <div>\n                        <p>\n                            <span className={classes.Line}>Ride Id\n                            </span>: {props.ride.id}\n                        </p>\n                        <p>\n                            <span className={classes.Line}>Origin Station\n                            </span>: {props.ride.origin_station_code}\n                        </p>\n                        <p>\n                            <span className={classes.Line}>station_path\n                            </span>: {JSON.stringify(props.ride.station_path)}\n                        </p>\n                        <p>\n                            <span className={classes.Line}>\n                                {new Date().getDate()}th Feb 2022{\" \"} {`${new Date().getHours()}:${new Date().getMinutes()}`}\n                            </span>\n\n                        </p>\n                        <p>\n                            <span className={classes.Line}>Distance\n                            </span>: {closest(props.ride, props.station_code) - props.station_code}\n                        </p>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default Ride;"]},"metadata":{},"sourceType":"module"}